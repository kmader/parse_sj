# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sensor.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sensor.proto',
  package='goosci',
  syntax='proto2',
  serialized_pb=_b('\n\x0csensor.proto\x12\x06goosci\"\x07\n\x05\x45mpty\"3\n\x07Version\"(\n\x07Version\x12\x0c\n\x07V_1_0_0\x10\x80\x10\x12\x0b\n\x06LATEST\x10\x80\x10\x1a\x02\x10\x01\"\x18\n\tAnalogPin\x12\x0b\n\x03pin\x18\x01 \x02(\x05\"\x19\n\nDigitalPin\x12\x0b\n\x03pin\x18\x01 \x02(\x05\"\x19\n\nVirtualPin\x12\x0b\n\x03pin\x18\x01 \x02(\x05\"\x8b\x01\n\x03Pin\x12\'\n\nanalog_pin\x18\n \x01(\x0b\x32\x11.goosci.AnalogPinH\x00\x12)\n\x0b\x64igital_pin\x18\x0b \x01(\x0b\x32\x12.goosci.DigitalPinH\x00\x12)\n\x0bvirtual_pin\x18\x0c \x01(\x0b\x32\x12.goosci.VirtualPinH\x00\x42\x05\n\x03pin\",\n\x08Interval\x12\r\n\x05\x63ount\x18\x01 \x02(\x05\x12\x11\n\tfrequency\x18\x02 \x01(\x05\"h\n\x11SensorDataRequest\x12\x15\n\rtimestamp_key\x18\x01 \x02(\r\x12\"\n\x08interval\x18\x02 \x02(\x0b\x32\x10.goosci.Interval\x12\x18\n\x03pin\x18\x03 \x03(\x0b\x32\x0b.goosci.Pin\"\x1c\n\x0b\x41nalogValue\x12\r\n\x05value\x18\x01 \x02(\r\"\x1d\n\x0c\x44igitalValue\x12\r\n\x05value\x18\x01 \x02(\x08\"\x1b\n\nFloatValue\x12\r\n\x05value\x18\x01 \x02(\x02\"\x19\n\x08IntValue\x12\r\n\x05value\x18\x01 \x02(\x05\"\x1c\n\x0bStringValue\x12\r\n\x05value\x18\x01 \x02(\t\"\x84\x02\n\x04\x44\x61ta\x12\x18\n\x03pin\x18\x01 \x02(\x0b\x32\x0b.goosci.Pin\x12+\n\x0c\x61nalog_value\x18\n \x01(\x0b\x32\x13.goosci.AnalogValueH\x00\x12-\n\rdigital_value\x18\x0b \x01(\x0b\x32\x14.goosci.DigitalValueH\x00\x12)\n\x0b\x66loat_value\x18\x0c \x01(\x0b\x32\x12.goosci.FloatValueH\x00\x12%\n\tint_value\x18\r \x01(\x0b\x32\x10.goosci.IntValueH\x00\x12+\n\x0cstring_value\x18\x0e \x01(\x0b\x32\x13.goosci.StringValueH\x00\x42\x07\n\x05value\"\x16\n\x05\x45rror\x12\r\n\x05\x65rror\x18\x01 \x02(\t\"k\n\nSensorData\x12\x15\n\rtimestamp_key\x18\x01 \x02(\r\x12\x1e\n\x05\x65rror\x18\n \x01(\x0b\x32\r.goosci.ErrorH\x00\x12\x1c\n\x04\x64\x61ta\x18\x0b \x01(\x0b\x32\x0c.goosci.DataH\x00\x42\x08\n\x06result*C\n\x08\x44\x61taType\x12\n\n\x06\x41NALOG\x10\x01\x12\x0b\n\x07\x44IGITAL\x10\x02\x12\t\n\x05\x46LOAT\x10\x03\x12\x07\n\x03INT\x10\x04\x12\n\n\x06STRING\x10\x05\x42K\n3com.google.android.apps.forscience.whistlepunk.dataB\x0cGoosciSensorH\x03\xa2\x02\x03GSJ')
)

_DATATYPE = _descriptor.EnumDescriptor(
  name='DataType',
  full_name='goosci.DataType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANALOG', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIGITAL', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1003,
  serialized_end=1070,
)
_sym_db.RegisterEnumDescriptor(_DATATYPE)

DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
ANALOG = 1
DIGITAL = 2
FLOAT = 3
INT = 4
STRING = 5


_VERSION_VERSION = _descriptor.EnumDescriptor(
  name='Version',
  full_name='goosci.Version.Version',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='V_1_0_0', index=0, number=2048,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LATEST', index=1, number=2048,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001')),
  serialized_start=44,
  serialized_end=84,
)
_sym_db.RegisterEnumDescriptor(_VERSION_VERSION)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='goosci.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=31,
)


_VERSION = _descriptor.Descriptor(
  name='Version',
  full_name='goosci.Version',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _VERSION_VERSION,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=84,
)


_ANALOGPIN = _descriptor.Descriptor(
  name='AnalogPin',
  full_name='goosci.AnalogPin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='goosci.AnalogPin.pin', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=86,
  serialized_end=110,
)


_DIGITALPIN = _descriptor.Descriptor(
  name='DigitalPin',
  full_name='goosci.DigitalPin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='goosci.DigitalPin.pin', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=137,
)


_VIRTUALPIN = _descriptor.Descriptor(
  name='VirtualPin',
  full_name='goosci.VirtualPin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='goosci.VirtualPin.pin', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=139,
  serialized_end=164,
)


_PIN = _descriptor.Descriptor(
  name='Pin',
  full_name='goosci.Pin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='analog_pin', full_name='goosci.Pin.analog_pin', index=0,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='digital_pin', full_name='goosci.Pin.digital_pin', index=1,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='virtual_pin', full_name='goosci.Pin.virtual_pin', index=2,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='pin', full_name='goosci.Pin.pin',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=167,
  serialized_end=306,
)


_INTERVAL = _descriptor.Descriptor(
  name='Interval',
  full_name='goosci.Interval',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='goosci.Interval.count', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='goosci.Interval.frequency', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=308,
  serialized_end=352,
)


_SENSORDATAREQUEST = _descriptor.Descriptor(
  name='SensorDataRequest',
  full_name='goosci.SensorDataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_key', full_name='goosci.SensorDataRequest.timestamp_key', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interval', full_name='goosci.SensorDataRequest.interval', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pin', full_name='goosci.SensorDataRequest.pin', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=354,
  serialized_end=458,
)


_ANALOGVALUE = _descriptor.Descriptor(
  name='AnalogValue',
  full_name='goosci.AnalogValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='goosci.AnalogValue.value', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=460,
  serialized_end=488,
)


_DIGITALVALUE = _descriptor.Descriptor(
  name='DigitalValue',
  full_name='goosci.DigitalValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='goosci.DigitalValue.value', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=490,
  serialized_end=519,
)


_FLOATVALUE = _descriptor.Descriptor(
  name='FloatValue',
  full_name='goosci.FloatValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='goosci.FloatValue.value', index=0,
      number=1, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=521,
  serialized_end=548,
)


_INTVALUE = _descriptor.Descriptor(
  name='IntValue',
  full_name='goosci.IntValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='goosci.IntValue.value', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=550,
  serialized_end=575,
)


_STRINGVALUE = _descriptor.Descriptor(
  name='StringValue',
  full_name='goosci.StringValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='goosci.StringValue.value', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=577,
  serialized_end=605,
)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='goosci.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pin', full_name='goosci.Data.pin', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog_value', full_name='goosci.Data.analog_value', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='digital_value', full_name='goosci.Data.digital_value', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='float_value', full_name='goosci.Data.float_value', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_value', full_name='goosci.Data.int_value', index=4,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string_value', full_name='goosci.Data.string_value', index=5,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='goosci.Data.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=608,
  serialized_end=868,
)


_ERROR = _descriptor.Descriptor(
  name='Error',
  full_name='goosci.Error',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='goosci.Error.error', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=870,
  serialized_end=892,
)


_SENSORDATA = _descriptor.Descriptor(
  name='SensorData',
  full_name='goosci.SensorData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_key', full_name='goosci.SensorData.timestamp_key', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='goosci.SensorData.error', index=1,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='goosci.SensorData.data', index=2,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='goosci.SensorData.result',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=894,
  serialized_end=1001,
)

_VERSION_VERSION.containing_type = _VERSION
_PIN.fields_by_name['analog_pin'].message_type = _ANALOGPIN
_PIN.fields_by_name['digital_pin'].message_type = _DIGITALPIN
_PIN.fields_by_name['virtual_pin'].message_type = _VIRTUALPIN
_PIN.oneofs_by_name['pin'].fields.append(
  _PIN.fields_by_name['analog_pin'])
_PIN.fields_by_name['analog_pin'].containing_oneof = _PIN.oneofs_by_name['pin']
_PIN.oneofs_by_name['pin'].fields.append(
  _PIN.fields_by_name['digital_pin'])
_PIN.fields_by_name['digital_pin'].containing_oneof = _PIN.oneofs_by_name['pin']
_PIN.oneofs_by_name['pin'].fields.append(
  _PIN.fields_by_name['virtual_pin'])
_PIN.fields_by_name['virtual_pin'].containing_oneof = _PIN.oneofs_by_name['pin']
_SENSORDATAREQUEST.fields_by_name['interval'].message_type = _INTERVAL
_SENSORDATAREQUEST.fields_by_name['pin'].message_type = _PIN
_DATA.fields_by_name['pin'].message_type = _PIN
_DATA.fields_by_name['analog_value'].message_type = _ANALOGVALUE
_DATA.fields_by_name['digital_value'].message_type = _DIGITALVALUE
_DATA.fields_by_name['float_value'].message_type = _FLOATVALUE
_DATA.fields_by_name['int_value'].message_type = _INTVALUE
_DATA.fields_by_name['string_value'].message_type = _STRINGVALUE
_DATA.oneofs_by_name['value'].fields.append(
  _DATA.fields_by_name['analog_value'])
_DATA.fields_by_name['analog_value'].containing_oneof = _DATA.oneofs_by_name['value']
_DATA.oneofs_by_name['value'].fields.append(
  _DATA.fields_by_name['digital_value'])
_DATA.fields_by_name['digital_value'].containing_oneof = _DATA.oneofs_by_name['value']
_DATA.oneofs_by_name['value'].fields.append(
  _DATA.fields_by_name['float_value'])
_DATA.fields_by_name['float_value'].containing_oneof = _DATA.oneofs_by_name['value']
_DATA.oneofs_by_name['value'].fields.append(
  _DATA.fields_by_name['int_value'])
_DATA.fields_by_name['int_value'].containing_oneof = _DATA.oneofs_by_name['value']
_DATA.oneofs_by_name['value'].fields.append(
  _DATA.fields_by_name['string_value'])
_DATA.fields_by_name['string_value'].containing_oneof = _DATA.oneofs_by_name['value']
_SENSORDATA.fields_by_name['error'].message_type = _ERROR
_SENSORDATA.fields_by_name['data'].message_type = _DATA
_SENSORDATA.oneofs_by_name['result'].fields.append(
  _SENSORDATA.fields_by_name['error'])
_SENSORDATA.fields_by_name['error'].containing_oneof = _SENSORDATA.oneofs_by_name['result']
_SENSORDATA.oneofs_by_name['result'].fields.append(
  _SENSORDATA.fields_by_name['data'])
_SENSORDATA.fields_by_name['data'].containing_oneof = _SENSORDATA.oneofs_by_name['result']
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Version'] = _VERSION
DESCRIPTOR.message_types_by_name['AnalogPin'] = _ANALOGPIN
DESCRIPTOR.message_types_by_name['DigitalPin'] = _DIGITALPIN
DESCRIPTOR.message_types_by_name['VirtualPin'] = _VIRTUALPIN
DESCRIPTOR.message_types_by_name['Pin'] = _PIN
DESCRIPTOR.message_types_by_name['Interval'] = _INTERVAL
DESCRIPTOR.message_types_by_name['SensorDataRequest'] = _SENSORDATAREQUEST
DESCRIPTOR.message_types_by_name['AnalogValue'] = _ANALOGVALUE
DESCRIPTOR.message_types_by_name['DigitalValue'] = _DIGITALVALUE
DESCRIPTOR.message_types_by_name['FloatValue'] = _FLOATVALUE
DESCRIPTOR.message_types_by_name['IntValue'] = _INTVALUE
DESCRIPTOR.message_types_by_name['StringValue'] = _STRINGVALUE
DESCRIPTOR.message_types_by_name['Data'] = _DATA
DESCRIPTOR.message_types_by_name['Error'] = _ERROR
DESCRIPTOR.message_types_by_name['SensorData'] = _SENSORDATA
DESCRIPTOR.enum_types_by_name['DataType'] = _DATATYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Empty)
  ))
_sym_db.RegisterMessage(Empty)

Version = _reflection.GeneratedProtocolMessageType('Version', (_message.Message,), dict(
  DESCRIPTOR = _VERSION,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Version)
  ))
_sym_db.RegisterMessage(Version)

AnalogPin = _reflection.GeneratedProtocolMessageType('AnalogPin', (_message.Message,), dict(
  DESCRIPTOR = _ANALOGPIN,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.AnalogPin)
  ))
_sym_db.RegisterMessage(AnalogPin)

DigitalPin = _reflection.GeneratedProtocolMessageType('DigitalPin', (_message.Message,), dict(
  DESCRIPTOR = _DIGITALPIN,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.DigitalPin)
  ))
_sym_db.RegisterMessage(DigitalPin)

VirtualPin = _reflection.GeneratedProtocolMessageType('VirtualPin', (_message.Message,), dict(
  DESCRIPTOR = _VIRTUALPIN,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.VirtualPin)
  ))
_sym_db.RegisterMessage(VirtualPin)

Pin = _reflection.GeneratedProtocolMessageType('Pin', (_message.Message,), dict(
  DESCRIPTOR = _PIN,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Pin)
  ))
_sym_db.RegisterMessage(Pin)

Interval = _reflection.GeneratedProtocolMessageType('Interval', (_message.Message,), dict(
  DESCRIPTOR = _INTERVAL,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Interval)
  ))
_sym_db.RegisterMessage(Interval)

SensorDataRequest = _reflection.GeneratedProtocolMessageType('SensorDataRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENSORDATAREQUEST,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.SensorDataRequest)
  ))
_sym_db.RegisterMessage(SensorDataRequest)

AnalogValue = _reflection.GeneratedProtocolMessageType('AnalogValue', (_message.Message,), dict(
  DESCRIPTOR = _ANALOGVALUE,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.AnalogValue)
  ))
_sym_db.RegisterMessage(AnalogValue)

DigitalValue = _reflection.GeneratedProtocolMessageType('DigitalValue', (_message.Message,), dict(
  DESCRIPTOR = _DIGITALVALUE,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.DigitalValue)
  ))
_sym_db.RegisterMessage(DigitalValue)

FloatValue = _reflection.GeneratedProtocolMessageType('FloatValue', (_message.Message,), dict(
  DESCRIPTOR = _FLOATVALUE,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.FloatValue)
  ))
_sym_db.RegisterMessage(FloatValue)

IntValue = _reflection.GeneratedProtocolMessageType('IntValue', (_message.Message,), dict(
  DESCRIPTOR = _INTVALUE,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.IntValue)
  ))
_sym_db.RegisterMessage(IntValue)

StringValue = _reflection.GeneratedProtocolMessageType('StringValue', (_message.Message,), dict(
  DESCRIPTOR = _STRINGVALUE,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.StringValue)
  ))
_sym_db.RegisterMessage(StringValue)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(
  DESCRIPTOR = _DATA,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Data)
  ))
_sym_db.RegisterMessage(Data)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), dict(
  DESCRIPTOR = _ERROR,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.Error)
  ))
_sym_db.RegisterMessage(Error)

SensorData = _reflection.GeneratedProtocolMessageType('SensorData', (_message.Message,), dict(
  DESCRIPTOR = _SENSORDATA,
  __module__ = 'sensor_pb2'
  # @@protoc_insertion_point(class_scope:goosci.SensorData)
  ))
_sym_db.RegisterMessage(SensorData)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n3com.google.android.apps.forscience.whistlepunk.dataB\014GoosciSensorH\003\242\002\003GSJ'))
_VERSION_VERSION.has_options = True
_VERSION_VERSION._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)
